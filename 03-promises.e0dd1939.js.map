{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBA0BtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WAELH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAMT,EAAUC,GACvBX,EAAAoB,OAAOC,QAAQ,sBAAuCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,CAO9D,SAASY,EAASb,EAAUC,GAC1BX,EAAAoB,OAAOI,QAAQ,uBAAsCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,CA/C7DT,EAAKC,KAAKsB,iBAAiB,UAAU,SAAAC,GACnCA,EAAEC,iBAGF,IAFA,IAAIC,EAAaC,OAAO3B,EAAKI,WAAWwB,OAE/BC,EAAI,EAAGA,GAAK7B,EAAKM,YAAYsB,MAAOC,GAAG,EAC9CtB,EAAcsB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBY,EAASb,EAAUC,GACnBuB,QAAQC,IAAI,uBAAwCb,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE3DyB,OAAM,SAAAH,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBQ,EAAMT,EAASC,GACfuB,QAAQC,IAAI,sBAAuCb,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE7DiB,GAAcC,OAAO3B,EAAKK,UAAUuB,OAG5B5B,EAAKI,WAAWwB,K","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notify from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  valueDelay: document.querySelector('input[name=\"delay\"]'),\n  valueStep: document.querySelector('input[name=\"step\"]'),\n  valueAmount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n  let countDelay = Number(refs.valueDelay.value);\n\n  for (let i = 1; i <= refs.valueAmount.value; i+=1) {\n    createPromise(i, countDelay)\n      .then(({ position, delay }) => {\n        onSucces(position, delay)\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        error(position,delay);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    countDelay += Number(refs.valueStep.value);\n  }\n\n  const x = refs.valueDelay.value;\n  // console.log(refs.valueDelay.value);\n  // console.log(refs.valueStep.value);\n  // console.log(refs.valueAmount.value);\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, rejeck) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        rejeck({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction error(position, delay) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`), {\n    clickToClose: true,\n    position: 'center-top',\n    timeout: 5000,\n  };\n}\n\nfunction onSucces(position, delay) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`), {\n    clickToClose: true,\n    position: 'center-top',\n    timeout: 5000,\n  };\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","valueDelay","valueStep","valueAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","rejeck","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$error","Notify","failure","concat","$ce04d3a99e08e73b$var$onSucces","success","addEventListener","e","preventDefault","countDelay","Number","value","i","then","param","console","log","catch"],"version":3,"file":"03-promises.e0dd1939.js.map"}